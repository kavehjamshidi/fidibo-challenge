// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/kavehjamshidi/fidibo-challenge/domain"
	mock "github.com/stretchr/testify/mock"
)

// RefreshTokenService is an autogenerated mock type for the RefreshTokenService type
type RefreshTokenService struct {
	mock.Mock
}

// RefreshToken provides a mock function with given fields: username
func (_m *RefreshTokenService) RefreshToken(username string) (domain.RefreshTokenResponse, error) {
	ret := _m.Called(username)

	var r0 domain.RefreshTokenResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (domain.RefreshTokenResponse, error)); ok {
		return rf(username)
	}
	if rf, ok := ret.Get(0).(func(string) domain.RefreshTokenResponse); ok {
		r0 = rf(username)
	} else {
		r0 = ret.Get(0).(domain.RefreshTokenResponse)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(username)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewRefreshTokenService interface {
	mock.TestingT
	Cleanup(func())
}

// NewRefreshTokenService creates a new instance of RefreshTokenService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRefreshTokenService(t mockConstructorTestingTNewRefreshTokenService) *RefreshTokenService {
	mock := &RefreshTokenService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
